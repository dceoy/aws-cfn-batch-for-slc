---
AWSTemplateFormatVersion: 2010-09-09
Description: IAM user groups for devops
Parameters:
  ProjectName:
    Description: Set the project name.
    Type: String
    Default: hpc
Resources:
  DevGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub ${ProjectName}-developer-group
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Policies:
        - PolicyName: !Sub ${ProjectName}-batch-development-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - batch:Describe*
                  - batch:List*
                  - batch:RegisterJobDefinition
                  - batch:DeregisterJobDefinition
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - ecs-tasks.amazonaws.com
        - PolicyName: !Sub ${ProjectName}-stepfunctions-development-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:Describe*
                  - states:List*
                  - states:CreateStateMachine
                  - states:DeleteStateMachine
                  - states:DescribeStateMachine
                  - states:DescribeStateMachineForExecution
                  - states:ListStateMachines
                  - states:UpdateStateMachine
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - states.amazonaws.com
  OpsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub ${ProjectName}-operator-group
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonGuardDutyReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess
      Policies:
        - PolicyName: !Sub ${ProjectName}-batch-operation-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - batch:Describe*
                  - batch:List*
                  - batch:SubmitJob
                  - batch:CancelJob
                  - batch:TerminateJob
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${ProjectName}-*
        - PolicyName: !Sub ${ProjectName}-stepfunctions-operation-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:Describe*
                  - states:List*
                  - states:*Execution*
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${ProjectName}-*
        - PolicyName: !Sub ${ProjectName}-s3-access-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetAccountPublicAccessBlock
                  - s3:GetBucketAcl
                  - s3:GetBucketPolicyStatus
                  - s3:GetBucketPublicAccessBlock
                  - s3:ListAccessPoints
                  - s3:ListAllMyBuckets
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:Describe*
                  - s3:Get*
                  - s3:List*
                  - s3-object-lambda:Get*
                  - s3-object-lambda:List*
                Resource: !Sub arn:aws:s3:::${ProjectName}-*
              - Effect: Allow
                Action:
                  - s3:Describe*
                  - s3:Get*
                  - s3:List*
                  - s3:*Object*
                  - s3:*MultipartUpload*
                  - s3-object-lambda:Get*
                  - s3-object-lambda:List*
                  - s3-object-lambda:*Object*
                  - s3-object-lambda:*MultipartUpload*
                Resource: !Sub arn:aws:s3:::${ProjectName}-*/*
        - PolicyName: !Sub ${ProjectName}-efs-access-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - elasticfilesystem:Describe*
                  - elasticfilesystem:List*
                Resource: '*'
              - Effect: Allow
                Action:
                  - elasticfilesystem:ClientMount
                  - elasticfilesystem:ClientWrite
                Resource: '*'
                Condition:
                  StringLike:
                    aws:ResourceTag/Name: !Sub ${ProjectName}-*
Outputs:
  DevGroup:
    Value: !Ref DevGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DevGroup
  OpsGroup:
    Value: !Ref OpsGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-OpsGroup
