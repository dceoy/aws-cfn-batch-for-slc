---
AWSTemplateFormatVersion: 2010-09-09
Description: IAM user groups for devops
Parameters:
  ProjectName:
    Description: Set the project name.
    Type: String
    Default: hpc
Resources:
  DevGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub ${ProjectName}-developer-group
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Policies:
        - PolicyName: !Sub ${ProjectName}-iam-development-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - ecs-tasks.amazonaws.com
                      - lambda.amazonaws.com
                      - states.amazonaws.com
                  StringEquals:
                    aws:ResourceTag/ProjectName: !Ref ProjectName
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - ecs-tasks.amazonaws.com
                      - lambda.amazonaws.com
                      - states.amazonaws.com
                  'Null':
                    aws:ResourceTag/ProjectName: 'true'
        - PolicyName: !Sub ${ProjectName}-ecr-development-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:CreateRepository
                  - ecr:DeleteRepository
                  - ecr:DeleteRepositoryPolicy
                  - ecr:DescribeRepositories
                  - ecr:GetRepositoryPolicy
                  - ecr:SetRepositoryPolicy
                  - ecr:TagResource
                  - ecr:UntagResource
                Resource: '*'
        - PolicyName: !Sub ${ProjectName}-batch-development-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - batch:Describe*
                  - batch:List*
                Resource: '*'
              - Effect: Allow
                Action:
                  - batch:RegisterJobDefinition
                  - batch:DeregisterJobDefinition
                  - batch:TagResource
                  - batch:UntagResource
                Resource:
                  - !Sub arn:aws:batch:${AWS::Region}:${AWS::AccountId}:job-definition/*
        - PolicyName: !Sub ${ProjectName}-lambda-development-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:Describe*
                  - lambda:List*
                Resource: '*'
              - Effect: Allow
                Action:
                  - lambda:TagResource
                  - lambda:UntagResource
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*
              - Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:ResourceTag/ProjectName: !Ref ProjectName
        - PolicyName: !Sub ${ProjectName}-stepfunctions-development-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:Describe*
                  - states:List*
                Resource: '*'
              - Effect: Allow
                Action:
                  - states:TagResource
                  - states:UntagResource
                Resource:
                  - !Sub arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:*
              - Effect: Allow
                Action:
                  - states:CreateStateMachine
                  - states:DeleteStateMachine
                  - states:UpdateStateMachine
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:ResourceTag/ProjectName: !Ref ProjectName
        - PolicyName: !Sub ${ProjectName}-s3-access-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                Resource: '*'
        - PolicyName: !Sub ${ProjectName}-efs-access-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - elasticfilesystem:Describe*
                  - elasticfilesystem:List*
                Resource: '*'
  OpsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub ${ProjectName}-operator-group
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonGuardDutyReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSBudgetsReadOnlyAccess
      Policies:
        - PolicyName: !Sub ${ProjectName}-batch-operation-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - batch:Describe*
                  - batch:List*
                Resource: '*'
              - Effect: Allow
                Action:
                  - batch:SubmitJob
                  - batch:CancelJob
                  - batch:TerminateJob
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:ResourceTag/ProjectName: !Ref ProjectName
        - PolicyName: !Sub ${ProjectName}-stepfunctions-operation-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:Describe*
                  - states:List*
                Resource: '*'
              - Effect: Allow
                Action:
                  - states:*Execution*
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:ResourceTag/ProjectName: !Ref ProjectName
        - PolicyName: !Sub ${ProjectName}-s3-access-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:Describe*
                  - s3:List*
                  - s3:Get*
                  - s3:*Object*
                  - s3:*MultipartUpload*
                  - s3-object-lambda:List*
                  - s3-object-lambda:Get*
                  - s3-object-lambda:*Object*
                  - s3-object-lambda:*MultipartUpload*
                Resource:
                  - !Sub arn:aws:s3:::${ProjectName}-*
                  - !Sub arn:aws:s3:::${ProjectName}-*/*
        - PolicyName: !Sub ${ProjectName}-efs-access-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - elasticfilesystem:Describe*
                  - elasticfilesystem:List*
                Resource: '*'
              - Effect: Allow
                Action:
                  - elasticfilesystem:ClientMount
                  - elasticfilesystem:ClientWrite
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:ResourceTag/ProjectName: !Ref ProjectName
Outputs:
  DevGroup:
    Value: !Ref DevGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DevGroup
  OpsGroup:
    Value: !Ref OpsGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-OpsGroup
